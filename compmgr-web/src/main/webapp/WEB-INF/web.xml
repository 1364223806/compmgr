<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">
    <display-name>computerMgr</display-name>


    <!--spring的应用上下文 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/config/applicationContext-*.xml</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <!-- 检查用户是否登录了系统的过滤器配置 开始 -->
    <filter>
        <filter-name>SessionFilter</filter-name>
        <filter-class>edu.zut.cs.filter.myFilter</filter-class>
        <init-param>
            <description>
                将当前登录的用户的信息保存在session 中时使用的key，如果没有配置此参数，则该过滤器不起作用
            </description>
            <param-name>sessionKey</param-name>
            <param-value>teacher</param-value>
        </init-param>
        <init-param>
            <description>
                如果用户未登录（即在session 中 key 为 sessionKey 的属性不存在或为空），则将请求重定向到该 url。
                该url 不包含web应用的 ContextPath。如果不配置此参数，则在用户未登录系统的情况下，
                直接重定向到web应用的根路径（/）
            </description>
            <param-name>redirectUrl</param-name>
            <param-value>/compmgr/html/login.html</param-value>
        </init-param>
        <init-param>
            <description>
                不需要进行拦截的url 的正则表达式，即：如果当前请求的 url 的 servletPath 能匹配该正则表达式，则直接放行（即使未登录系统）。
                此参数的值一般为loginServlet 和 registServlet 等。另外，参数redirectUrl 的值不用包含在该正则表达式中，因为 redirectUrl 对应的 url 会被自动放行。
                还有一点需要说明的是，该参数的值不包含web应用的ContextPath。
            </description>
            <param-name>uncheckedUrls</param-name>
            <!-- 不需要拦截的路径
                (login_login_execute|login_2_login).do
                会在后面有详细的解释
            -->
            <param-value>/html/login.html,/html/register.html,/login/teacherinfo.action,/login/authentication.action,/login/logout.action,</param-value>
        </init-param>
    </filter>
    <!-- /* 表示所有的都要进行过滤-->
    <filter-mapping>
        <filter-name>SessionFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- 设置字符编码 -->
    <filter>
        <filter-name>encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <!-- 强制进行转码 -->
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 浏览器不支持put,delete等method,由该filter将/blog?_method=delete转换为标准的http delete方法 -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <servlet-name>DispatcherServlet</servlet-name>
    </filter-mapping>

    <servlet>
        <servlet-name>DispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/config/spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>*.json</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>*.jsonp</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>/resources/*</url-pattern>
    </servlet-mapping>
    
    <welcome-file-list>
        <welcome-file>/html/login.html</welcome-file>
    </welcome-file-list>
</web-app>